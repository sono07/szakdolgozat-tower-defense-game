@startuml
interface IAction {
    +actionKey: string
    +getPriceForTile(tile?: Phaser.Tilemaps.Tile | undefined): number
    +getSelectorColorForTile(tile?: Phaser.Tilemaps.Tile | undefined): number
    +onTileHover(tile?: Phaser.Tilemaps.Tile | undefined): void
    +onTileClick(tile: Phaser.Tilemaps.Tile): void
}

abstract class PlaceAction<T extends ITurretObject & Phaser.GameObjects.GameObject> implements IAction {
    +{abstract} actionKey: string
    -group: ITurretGroup<T>
    -gameStateStore: IGameStateStore
    -turret?: T | undefined
    -isGoodTile(tile?: Phaser.Tilemaps.Tile | undefined): boolean
    +getPriceForTile(tile?: Phaser.Tilemaps.Tile | undefined): number
    +getSelectorColorForTile(tile?: Phaser.Tilemaps.Tile | undefined): number
    +onTileHover(tile?: Phaser.Tilemaps.Tile | undefined): void
    +onTileClick(tile: Phaser.Tilemaps.Tile): void
}

class PlaceTurretBulletMk1Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretBulletMk2Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretBulletMk3Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretEnergyBallBlueMk1Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretEnergyBallBlueMk2Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretEnergyBallBlueMk3Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretEnergyBallOrangeMk1Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretEnergyBallOrangeMk2Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretEnergyBallOrangeMk3Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretLaserMk1Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretLaserMk2Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretLaserMk3Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretRocketMk1Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretRocketMk2Action extends PlaceAction {
    +actionKey: string
}

class PlaceTurretRocketMk3Action extends PlaceAction {
    +actionKey: string
}

class RemoveAction implements IAction {
    +actionKey: string
    -gameStateStore: IGameStateStore
    -getGroupFor(tv: number): ITurretGroup<Phaser.GameObjects.Sprite & ITurretObject> | undefined
    -getPriceAndGroupForTile(tile?: Phaser.Tilemaps.Tile | undefined): { price: number; group?: ITurretGroup<ITurretObject & Phaser.GameObjects.Sprite> | undefined; }
    +getPriceForTile(tile?: Phaser.Tilemaps.Tile | undefined): number
    +getSelectorColorForTile(tile?: Phaser.Tilemaps.Tile | undefined): number
    +onTileHover(tile?: Phaser.Tilemaps.Tile | undefined): void
    +onTileClick(tile: Phaser.Tilemaps.Tile): void
}

class SelectAction implements IAction {
    +actionKey: string
    -gameStateStore: IGameStateStore
    +getPriceForTile(tile?: Phaser.Tilemaps.Tile | undefined): number
    +getSelectorColorForTile(tile?: Phaser.Tilemaps.Tile | undefined): number
    +onTileHover(tile?: Phaser.Tilemaps.Tile | undefined): void
    +onTileClick(tile: Phaser.Tilemaps.Tile): void
}
@enduml
